class Solution {
public:
    bool isValid(int k,int s,vector<vector<int>>&adj,vector<int>&color,vector<bool>&visited)
    {   
        for(int x:adj[s])
        {  if(visited[x]==true)
            {  if(k==color[x])
                  return false;
            }
        }
        return true;
    }
    bool fun(int s,vector<vector<int>>&adj,vector<int>&color,vector<bool>&visited)
    {   visited[s]=true;
        for(int k=1;k<=2;++k)
          {  if(isValid(k,s,adj,color,visited)==true)
              {  color[s]=k;
                 for(int x:adj[s])
                 {  if(visited[x]==false)
                     { if(fun(x,adj,color,visited)==false)
                        {  color[s]=-1;
                           break;
                        }
                     }
                 }  
              }
          }
       if(color[s]==-1)
       { visited[s]=false;
          return false;  
       }
       else
         return true;
    }
    bool isBipartite(vector<vector<int>>& adj) {
        int n=adj.size();
        vector<bool>visited(n,false);
        vector<int>color(n,-1);
        for(int i=0;i<n;++i)
        {  if(visited[i]==false)
            {  
               if(fun(i,adj,color,visited)==false)
                   return false;
            }
        }
        return true;
    }
};
