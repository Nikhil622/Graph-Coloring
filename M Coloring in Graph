bool isValid(int s,int k,vector<int>*adj,vector<bool>&visited,vector<int>&color)
{
    for(int x:adj[s])
    {  if(visited[x]==true)
         {  if(color[x]==k)
               return false;
         }
    }
    return true;
}
bool fun(int s,vector<int>*adj,vector<bool>&visited,vector<int>&color,int m)
{
    visited[s]=true;
    for(int k=1;k<=m;++k)
    { if(isValid(s,k,adj,visited,color)==true)
        {  color[s]=k;
           for(int x:adj[s])
           {  if(visited[x]==false)
                { if(fun(x,adj,visited,color,m)==false)
                     {  color[s]=-1;
                        break; 
                     }
                }
           }
        } 
    }
    if(color[s]==-1)
    {  visited[s]=false;
       return false;
    }
    return true;
}
bool graphColoring(bool graph[101][101], int m, int n) // n nodes
{    vector<int> adj[n];
     for(int i=0;i<n;++i)
      {  for(int j=0;j<n;++j)
          {  if(graph[i][j]==true)
               {  adj[i].push_back(j);
                  adj[j].push_back(i);
               }
          }
      }
     vector<bool>visited(n,false);
     vector<int>color(n,-1);
     for(int i=0;i<n;++i)
     {  if(visited[i]==false)
          { if(fun(i,adj,visited,color,m)==false)
              return false;
          }
     }
     return true;
}
